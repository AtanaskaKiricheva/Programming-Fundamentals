using System;
using System.Collections.Generic;
using System.Linq;

public class January06_2017Part1
{
    public static void Main()
    {
        List<string> participants = Console.ReadLine().Split(',').ToList();
        List<string> songs = Console.ReadLine().Split(',').ToList();
        string[] performance = Console.ReadLine().Split(',').ToArray();

        var winners = new Dictionary<string, List<string>>();
        var previousSong = "";


        for (int i = 0; i < participants.Count; i++)
        {
            participants[i] = participants[i].TrimStart();
        }
        for (int i = 0; i < songs.Count; i++)
        {
            songs[i] = songs[i].TrimStart();
        }
        while (performance[0] != "dawn")
        {

            for (int i = 0; i < performance.Length; i++)
            {
                performance[i] = performance[i].TrimStart();
            }
            foreach (var participant in participants)
            {
                if (!winners.ContainsKey(participant))
                {
                    winners.Add(participant, new List<string>());
                }
                if (performance[0] == participant)
                {
                    foreach (var song in songs)
                    {
                        foreach (var playerSong in performance)
                        {
                            if (playerSong == participant)
                            {
                                continue;
                            }
                            if (!songs.Contains(playerSong))
                            {
                                if (playerSong != song && songs.Contains(previousSong))
                                {
                                    winners[participant].Add(playerSong);
                                    previousSong = "";
                                }

                            }
                            previousSong = playerSong;

                        }
                    }
                }
            }
            performance = Console.ReadLine().Split(',').ToArray();
        }
        var badKeys = winners.Where(pair => pair.Value.Count == 0)
                        .Select(pair => pair.Key)
                        .ToList();
        foreach (var badKey in badKeys)
        {
            winners.Remove(badKey);
        }

        if (winners.Count == 0)
        {
            Console.WriteLine("No awards");
        }
        else
        {
            foreach (KeyValuePair<string, List<string>> pair in winners
             .OrderByDescending(a => a.Value.Distinct().ToList().Count).ThenBy(n => n.Key))
            {
                List<string> awards = pair.Value.Distinct().ToList();

                Console.WriteLine($"{pair.Key}: {awards.Count} awards");
                foreach (string award in awards.OrderBy(n => n))
                {
                    Console.WriteLine($"--{award}");
                }
            }
        }
    }
}